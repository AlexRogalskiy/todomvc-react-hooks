{"version":3,"sources":["constants/filter.js","constants/action-type.js","store/selectors/todo.js","store/reducers/todo.js","store/index.js","store/reducers/filter.js","store/actions/todo.js","services/todo-local.js","components/header/header.js","components/item/item.js","components/list/list.js","components/footer/footer.js","store/actions/filter.js","components/copy-right/copy-right.js","components/app/app.js","index.js"],"names":["FILTERS","ACTION_TYPES","selectNotCompleted","todos","filter","todo","completed","selectCompleted","reducers","combineReducers","state","action","type","id","uuidv4","name","map","values","areAllCompleted","length","onCreate","TodoLocal","JSON","parse","window","localStorage","getItem","setItem","stringify","Header","setName","useState","dispatch","useDispatch","className","placeholder","value","onInput","event","target","onKeyUp","key","onChange","data-testid","Item","onUpdate","onRemove","editing","setEditing","classNames","checked","onDoubleClick","onClick","onBlur","List","visibleTodos","useSelector","selectVisible","every","update","remove","readOnly","htmlFor","Footer","filterTitles","completedCount","itemsLeft","filterSelect","onFilterSelect","itemText","filterTitle","href","selected","CopyRight","App","useEffect","onLoad","loadTodos","storeTodos","render","store","createReduxStore","__REDUX_DEVTOOLS_EXTENSION__","createStore","document","getElementsByTagName"],"mappings":"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","file":"static/js/main.f15599d4.chunk.js","sourcesContent":["export const FILTERS = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed',\n};\n","export const ACTION_TYPES = {\n  load: 'LOAD',\n  create: 'CREATE',\n  remove: 'REMOVE',\n  update: 'UPDATE_TODO',\n  completeAll: 'COMPLETE_ALL',\n  clearCompleted: 'CLEAR_COMPLETED',\n  selectFilter: 'SELECT_FILTER',\n};\n","import { FILTERS } from '../../constants/filter';\n\nexport function selectVisible(todos, filter) {\n  switch (filter) {\n    case FILTERS.all:\n      return [...todos];\n    case FILTERS.completed:\n      return selectCompleted(todos);\n    case FILTERS.active:\n      return selectNotCompleted(todos);\n    default:\n      return [...todos];\n  }\n}\n\nexport function selectNotCompleted(todos) {\n  return todos.filter(todo => !todo.completed);\n}\n\nexport function selectCompleted(todos) {\n  return todos.filter(todo => todo.completed);\n}\n","import { ACTION_TYPES } from '../../constants/action-type';\nimport { v4 as uuidv4 } from 'uuid';\nimport { selectCompleted, selectNotCompleted } from '../selectors/todo';\n\nexport const todosReducer = (state = [], action) => {\n  switch (action.type) {\n    case ACTION_TYPES.load:\n      return [...action.todos];\n    case ACTION_TYPES.create:\n      return [...state, { id: uuidv4(), name: action.name, completed: false }];\n    case ACTION_TYPES.update:\n      return state.map(\n        todo => todo.id === action.values.id ? { ...todo, ...action.values } : todo\n      );\n    case ACTION_TYPES.remove:\n      return state.filter(todo => todo.id !== action.id);\n    case ACTION_TYPES.completeAll:\n      const areAllCompleted = state.length && selectCompleted(state).length === state.length;\n      return state.map(\n        todo => ({ ...todo, ...{ completed: !areAllCompleted } })\n      );\n    case ACTION_TYPES.clearCompleted:\n      return selectNotCompleted(state);\n    default:\n      return state;\n  }\n};\n","import { combineReducers, createStore as createReduxStore } from 'redux';\nimport { FILTERS } from '../constants/filter';\n\nimport { todosReducer } from './reducers/todo';\nimport { filterReducer } from './reducers/filter';\n\nconst reducers = combineReducers({\n  todos: todosReducer,\n  filter: filterReducer\n});\n\nexport const createStore = (state = { todos: [], filter: FILTERS.all }) => createReduxStore(\n  reducers, state, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n","import { ACTION_TYPES } from '../../constants/action-type';\nimport { FILTERS } from '../../constants/filter';\n\nexport const filterReducer = (state = FILTERS.all, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.selectFilter:\n      return action.filter;\n    default:\n      return state;\n  }\n};\n","import { ACTION_TYPES } from '../../constants/action-type';\n\nexport const onLoad = todos => ({ type: ACTION_TYPES.load, todos });\nexport const onCreate = name => ({ type: ACTION_TYPES.create, name });\nexport const onRemove = id => ({ type: ACTION_TYPES.remove, id });\nexport const onUpdate = values => ({ type: ACTION_TYPES.update, values });\nexport const onCompleteAll = () => ({ type: ACTION_TYPES.completeAll });\nexport const onClearCompleted = () => ({ type: ACTION_TYPES.clearCompleted });\n","const LOCAL_STORAGE_KEY = 'todoapp_todos';\n\nexport class TodoLocal {\n  static loadTodos() {\n    return JSON.parse(\n      window.localStorage.getItem(LOCAL_STORAGE_KEY) || '[]'\n    );\n  }\n\n  static storeTodos(todos) {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { onCreate } from '../../store/actions/todo';\nconst ENTER_KEY = 'Enter';\n\nexport function Header() {\n  const [name, setName] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = event => setName(event.target.value);\n\n  const handleSubmit = event => {\n    if (event.key !== ENTER_KEY) {\n      return;\n    }\n\n    dispatch(onCreate(name));\n    onCreate(name);\n    setName('');\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={name}\n        onInput={handleChange}\n        onKeyUp={handleSubmit}\n        onChange={() => {}}\n        data-testid=\"todo-create\"\n      />\n    </header>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport function Item({ todo, onUpdate, onRemove }) {\n  const [editing, setEditing] = useState(false);\n  const [name, setName] = useState(todo.name);\n\n  const handleEdit = () => setEditing(true);\n\n  const handleCompleted = () => {\n    onUpdate({\n      id: todo.id,\n      completed: !todo.completed\n    });\n  };\n\n  const handleRemove = () => onRemove(todo.id);\n\n  const handleChange = event => setName(event.target.value);\n\n  const handleBlur = () => {\n    onUpdate({\n      id: todo.id,\n      name\n    });\n    setEditing(false);\n  };\n\n  const { completed } = todo;\n\n  return (\n    <li className={classNames({ completed, editing })} data-testid=\"todo-item\">\n      <div className=\"view\">\n        <input\n          className=\"toggle\"\n          type=\"checkbox\"\n          checked={completed}\n          onChange={handleCompleted}\n        />\n        <label onDoubleClick={handleEdit} data-testid=\"todo-name\">{todo.name}</label>\n        <button\n          className=\"destroy\"\n          onClick={handleRemove}\n          data-testid=\"todo-remove\"\n        />\n      </div>\n      {\n        editing &&\n        <input\n          className=\"edit\"\n          value={name}\n          onInput={handleChange}\n          onBlur={handleBlur}\n          onChange={() => {}}\n        />\n      }\n    </li>\n  );\n}\n\nItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Item } from '../item/item';\nimport { selectVisible } from '../../store/selectors/todo';\nimport { onUpdate, onRemove, onCompleteAll } from '../../store/actions/todo';\n\nexport function List() {\n  const dispatch = useDispatch();\n  const visibleTodos = useSelector(state => selectVisible(state.todos, state.filter));\n  const areAllCompleted = useSelector(state => state.todos.length && state.todos.every(todo => todo.completed));\n  const completeAll = () => dispatch(onCompleteAll());\n  const update = values => dispatch(onUpdate(values));\n  const remove = id => dispatch(onRemove(id));\n\n  return (\n    <section className=\"main\">\n      <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" checked={areAllCompleted} readOnly />\n      <label htmlFor=\"toggle-all\" onClick={completeAll}></label>\n\n      <ul className=\"todo-list\">\n        {visibleTodos.map(todo =>\n          <Item\n            key={todo.id}\n            todo={todo}\n            onUpdate={update}\n            onRemove={remove}\n          />\n        )}\n      </ul>\n    </section>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { FILTERS } from '../../constants/filter';\nimport { selectCompleted, selectNotCompleted } from '../../store/selectors/todo';\nimport { onClearCompleted } from '../../store/actions/todo';\nimport { onFilterSelect } from '../../store/actions/filter';\n\nexport function Footer() {\n  const filterTitles = [\n    { key: FILTERS.all, value: 'All' },\n    { key: FILTERS.active, value: 'Active' },\n    { key: FILTERS.completed, value: 'Completed' }\n  ];\n  const dispatch = useDispatch();\n  const completedCount = useSelector(state => selectCompleted(state.todos).length);\n  const itemsLeft = useSelector(state => selectNotCompleted(state.todos).length);\n  const filter = useSelector(state => state.filter);\n  const clearCompleted = () => dispatch(onClearCompleted());\n  const filterSelect = filter => dispatch(onFilterSelect(filter));\n\n  const itemText = itemsLeft === 1 ? 'item' : 'items';\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\"><strong>{itemsLeft}</strong><span> {itemText} left</span></span>\n      <ul className=\"filters\">\n        {filterTitles.map(filterTitle =>\n          <li key={filterTitle.key}>\n            <a\n              href=\"#\"\n              className={classNames({ selected: filterTitle.key === filter })}\n              onClick={() => filterSelect(filterTitle.key)}\n            >\n              {filterTitle.value}\n            </a>\n          </li>\n        )}\n      </ul>\n      {\n        !!completedCount &&\n        <button className=\"clear-completed\" onClick={clearCompleted}>Clear completed</button>\n      }\n    </footer>\n  );\n}\n","import { ACTION_TYPES } from '../../constants/action-type';\n\nexport const onFilterSelect = filter => ({ type: ACTION_TYPES.selectFilter, filter });\n","import React from 'react';\n\nexport function CopyRight() {\n  return (\n    <footer className=\"info\">\n      <p data-testid=\"instruction\">Double-click to edit a todo</p>\n      <p>Created by <a href=\"http://github.com/blacksonic/\">blacksonic</a></p>\n      <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\n    </footer>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onLoad } from '../../store/actions/todo';\nimport { TodoLocal } from '../../services/todo-local';\nimport { Header } from '../header/header';\nimport { List } from '../list/list';\nimport { Footer } from '../footer/footer';\nimport { CopyRight } from '../copy-right/copy-right';\n\nexport function App() {\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todos);\n\n  useEffect(() => {\n    dispatch(\n      onLoad(TodoLocal.loadTodos())\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    TodoLocal.storeTodos(todos);\n  }, [todos]);\n\n  return (\n    <div id=\"app\">\n      <section className=\"todoapp\">\n        <Header />\n        {\n          !!todos.length &&\n          <List />\n        }\n        {\n          !!todos.length &&\n          <Footer />\n        }\n      </section>\n      <CopyRight />\n    </div>\n  );\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport 'todomvc-app-css/index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from './store';\nimport { App } from './components/app/app';\n\nrender(\n  <Provider store={createStore()}>\n    <App  />\n  </Provider>,\n  document.getElementsByTagName('app-root')[0]\n);\n"],"sourceRoot":""}