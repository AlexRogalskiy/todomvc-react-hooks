{"version":3,"sources":["constants/filter.js","constants/action-type.js","store/selectors/todo.js","store/reducers/todo.js","store/index.js","store/reducers/filter.js","store/actions/todo.js","services/todo-local.js","components/header/header.js","components/item/item.js","components/list/list.js","components/footer/footer.js","store/actions/filter.js","components/copy-right/copy-right.js","components/app/app.js","index.js"],"names":["FILTERS","ACTION_TYPES","selectCompleted","todos","filter","todo","completed","selectNotCompleted","areAllCompleted","state","length","reducers","combineReducers","action","type","id","uuidv4","name","map","values","storeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION__","defaultState","onCreate","TodoLocal","JSON","parse","localStorage","getItem","setItem","stringify","Header","setName","useState","dispatch","useDispatch","className","placeholder","value","onInput","event","target","onKeyUp","key","onChange","data-testid","Item","onUpdate","onRemove","editing","setEditing","classNames","checked","onDoubleClick","onClick","onBlur","List","visibleTodos","useSelector","selectVisible","every","update","remove","readOnly","htmlFor","Footer","filterTitles","completedCount","itemsLeft","filterSelect","selectedFilter","onFilterSelect","itemText","filterTitle","href","selected","CopyRight","App","useEffect","onLoad","loadTodos","storeTodos","render","store","createReduxStore","createStore","document","getElementsByTagName"],"mappings":"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","file":"static/js/main.9000d7ab.chunk.js","sourcesContent":["export const FILTERS = {\n  all: 'all',\n  active: 'active',\n  completed: 'completed'\n};\n","export const ACTION_TYPES = {\n  load: 'LOAD',\n  create: 'CREATE',\n  remove: 'REMOVE',\n  update: 'UPDATE_TODO',\n  completeAll: 'COMPLETE_ALL',\n  clearCompleted: 'CLEAR_COMPLETED',\n  selectFilter: 'SELECT_FILTER'\n};\n","import { FILTERS } from '../../constants/filter';\n\nexport function selectCompleted(todos) {\n  return todos.filter(todo => todo.completed);\n}\n\nexport function selectNotCompleted(todos) {\n  return todos.filter(todo => !todo.completed);\n}\n\nexport function selectVisible(todos, filter) {\n  switch (filter) {\n    case FILTERS.all:\n      return [...todos];\n    case FILTERS.completed:\n      return selectCompleted(todos);\n    case FILTERS.active:\n      return selectNotCompleted(todos);\n    default:\n      return [...todos];\n  }\n}\n","import { v4 as uuidv4 } from 'uuid';\nimport { ACTION_TYPES } from '../../constants/action-type';\nimport { selectCompleted, selectNotCompleted } from '../selectors/todo';\n\nconst areAllCompleted = state => state.length && selectCompleted(state).length === state.length;\n\nexport const todosReducer = (state = [], action) => {\n  switch (action.type) {\n    case ACTION_TYPES.load:\n      return [...action.todos];\n    case ACTION_TYPES.create:\n      return [...state, { id: uuidv4(), name: action.name, completed: false }];\n    case ACTION_TYPES.update:\n      return state.map(todo => (todo.id === action.values.id ? { ...todo, ...action.values } : todo));\n    case ACTION_TYPES.remove:\n      return state.filter(todo => todo.id !== action.id);\n    case ACTION_TYPES.completeAll:\n      return state.map(todo => ({ ...todo, ...{ completed: !areAllCompleted(state) } }));\n    case ACTION_TYPES.clearCompleted:\n      return selectNotCompleted(state);\n    default:\n      return state;\n  }\n};\n","import { combineReducers, createStore as createReduxStore } from 'redux';\nimport { FILTERS } from '../constants/filter';\n\nimport { todosReducer } from './reducers/todo';\nimport { filterReducer } from './reducers/filter';\n\nconst reducers = combineReducers({\n  todos: todosReducer,\n  filter: filterReducer\n});\n\nconst storeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\nconst defaultState = { todos: [], filter: FILTERS.all };\nexport const createStore = (state = defaultState) => createReduxStore(reducers, state, storeEnhancer);\n","import { ACTION_TYPES } from '../../constants/action-type';\nimport { FILTERS } from '../../constants/filter';\n\nexport const filterReducer = (state = FILTERS.all, action) => {\n  switch (action.type) {\n    case ACTION_TYPES.selectFilter:\n      return action.filter;\n    default:\n      return state;\n  }\n};\n","import { ACTION_TYPES } from '../../constants/action-type';\n\nexport const onLoad = todos => ({ type: ACTION_TYPES.load, todos });\nexport const onCreate = name => ({ type: ACTION_TYPES.create, name });\nexport const onRemove = id => ({ type: ACTION_TYPES.remove, id });\nexport const onUpdate = values => ({ type: ACTION_TYPES.update, values });\nexport const onCompleteAll = () => ({ type: ACTION_TYPES.completeAll });\nexport const onClearCompleted = () => ({ type: ACTION_TYPES.clearCompleted });\n","const LOCAL_STORAGE_KEY = 'todoapp_todos';\n\nexport class TodoLocal {\n  static loadTodos() {\n    return JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY) || '[]');\n  }\n\n  static storeTodos(todos) {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n  }\n}\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { onCreate } from '../../store/actions/todo';\n\nconst ENTER_KEY = 'Enter';\n\nexport function Header() {\n  const [name, setName] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChange = event => setName(event.target.value);\n\n  const handleSubmit = event => {\n    if (event.key !== ENTER_KEY) {\n      return;\n    }\n\n    dispatch(onCreate(name));\n    onCreate(name);\n    setName('');\n  };\n\n  return (\n    <header className=\"header\">\n      <h1>todos</h1>\n      <input\n        className=\"new-todo\"\n        placeholder=\"What needs to be done?\"\n        value={name}\n        onInput={handleChange}\n        onKeyUp={handleSubmit}\n        onChange={() => {}}\n        data-testid=\"todo-create\"\n      />\n    </header>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nexport function Item({ todo, onUpdate, onRemove }) {\n  const [editing, setEditing] = useState(false);\n  const [name, setName] = useState(todo.name);\n\n  const handleEdit = () => setEditing(true);\n  const handleCompleted = () => onUpdate({ id: todo.id, completed: !todo.completed });\n  const handleRemove = () => onRemove(todo.id);\n  const handleChange = event => setName(event.target.value);\n  const handleBlur = () => {\n    onUpdate({ id: todo.id, name });\n    setEditing(false);\n  };\n\n  const { completed } = todo;\n\n  return (\n    <li className={classNames({ completed, editing })} data-testid=\"todo-item\">\n      <div className=\"view\">\n        <input className=\"toggle\" type=\"checkbox\" checked={completed} onChange={handleCompleted} />\n        <label onDoubleClick={handleEdit} data-testid=\"todo-name\">\n          {todo.name}\n        </label>\n        <button className=\"destroy\" onClick={handleRemove} data-testid=\"todo-remove\" />\n      </div>\n      {editing && (\n        <input className=\"edit\" value={name} onInput={handleChange} onBlur={handleBlur} onChange={() => {}} />\n      )}\n    </li>\n  );\n}\n\nItem.propTypes = {\n  todo: PropTypes.object.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  onRemove: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Item } from '../item/item';\nimport { selectVisible } from '../../store/selectors/todo';\nimport { onUpdate, onRemove, onCompleteAll } from '../../store/actions/todo';\n\nexport function List() {\n  const dispatch = useDispatch();\n  const visibleTodos = useSelector(state => selectVisible(state.todos, state.filter));\n  const areAllCompleted = useSelector(state => state.todos.length && state.todos.every(todo => todo.completed));\n  const completeAll = () => dispatch(onCompleteAll());\n  const update = values => dispatch(onUpdate(values));\n  const remove = id => dispatch(onRemove(id));\n\n  return (\n    <section className=\"main\">\n      <input id=\"toggle-all\" className=\"toggle-all\" type=\"checkbox\" checked={areAllCompleted} readOnly />\n      <label htmlFor=\"toggle-all\" onClick={completeAll} />\n\n      <ul className=\"todo-list\">\n        {visibleTodos.map(todo => (\n          <Item key={todo.id} todo={todo} onUpdate={update} onRemove={remove} />\n        ))}\n      </ul>\n    </section>\n  );\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { FILTERS } from '../../constants/filter';\nimport { selectCompleted, selectNotCompleted } from '../../store/selectors/todo';\nimport { onClearCompleted } from '../../store/actions/todo';\nimport { onFilterSelect } from '../../store/actions/filter';\n\nexport function Footer() {\n  const filterTitles = [\n    { key: FILTERS.all, value: 'All' },\n    { key: FILTERS.active, value: 'Active' },\n    { key: FILTERS.completed, value: 'Completed' }\n  ];\n  const dispatch = useDispatch();\n  const completedCount = useSelector(state => selectCompleted(state.todos).length);\n  const itemsLeft = useSelector(state => selectNotCompleted(state.todos).length);\n  const filter = useSelector(state => state.filter);\n  const clearCompleted = () => dispatch(onClearCompleted());\n  const filterSelect = selectedFilter => dispatch(onFilterSelect(selectedFilter));\n\n  const itemText = itemsLeft === 1 ? 'item' : 'items';\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">\n        <strong>{itemsLeft}</strong>\n        <span> {itemText} left</span>\n      </span>\n      <ul className=\"filters\">\n        {filterTitles.map(filterTitle => (\n          <li key={filterTitle.key}>\n            <a\n              href=\"./#\"\n              className={classNames({ selected: filterTitle.key === filter })}\n              onClick={() => filterSelect(filterTitle.key)}\n            >\n              {filterTitle.value}\n            </a>\n          </li>\n        ))}\n      </ul>\n      {!!completedCount && (\n        <button className=\"clear-completed\" onClick={clearCompleted}>\n          Clear completed\n        </button>\n      )}\n    </footer>\n  );\n}\n","import { ACTION_TYPES } from '../../constants/action-type';\n\nexport const onFilterSelect = filter => ({ type: ACTION_TYPES.selectFilter, filter });\n","import React from 'react';\n\nexport function CopyRight() {\n  return (\n    <footer className=\"info\">\n      <p data-testid=\"instruction\">Double-click to edit a todo</p>\n      <p>\n        Created by <a href=\"http://github.com/blacksonic/\">blacksonic</a>\n      </p>\n      <p>\n        Part of <a href=\"http://todomvc.com\">TodoMVC</a>\n      </p>\n    </footer>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onLoad } from '../../store/actions/todo';\nimport { TodoLocal } from '../../services/todo-local';\nimport { Header } from '../header/header';\nimport { List } from '../list/list';\nimport { Footer } from '../footer/footer';\nimport { CopyRight } from '../copy-right/copy-right';\n\nexport function App() {\n  const dispatch = useDispatch();\n  const todos = useSelector(state => state.todos);\n\n  useEffect(() => {\n    dispatch(onLoad(TodoLocal.loadTodos()));\n  }, [dispatch]);\n\n  useEffect(() => {\n    TodoLocal.storeTodos(todos);\n  }, [todos]);\n\n  return (\n    <div id=\"app\">\n      <section className=\"todoapp\">\n        <Header />\n        {!!todos.length && <List />}\n        {!!todos.length && <Footer />}\n      </section>\n      <CopyRight />\n    </div>\n  );\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport 'todomvc-app-css/index.css';\nimport { Provider } from 'react-redux';\nimport { createStore } from './store';\nimport { App } from './components/app/app';\n\nrender(\n  <Provider store={createStore()}>\n    <App />\n  </Provider>,\n  document.getElementsByTagName('app-root')[0]\n);\n"],"sourceRoot":""}